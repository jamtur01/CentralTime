name: Create Release

on:
  push:
    tags:
      - 'v*' # Run when tag matches v*, e.g., v1.0.0

jobs:
  validate:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Select Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
      
      - name: Install SwiftLint
        run: brew install swiftlint
      
      - name: Run SwiftLint
        run: swiftlint --strict || echo "SwiftLint failed, but continuing..."
      
      - name: Build and Test
        run: |
          chmod +x ./build.sh
          ./build.sh --type release
          swift test -v || echo "No tests found, continuing..."

  create-release:
    needs: validate
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
    
    - name: Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Set up signing certificate
      env:
        MACOS_CERTIFICATE_P12: ${{ secrets.MACOS_CERTIFICATE_P12 }}
        MACOS_CERTIFICATE_PASSWORD: ${{ secrets.MACOS_CERTIFICATE_PASSWORD }}
      run: |
        echo "$MACOS_CERTIFICATE_P12" | base64 --decode > certificate.p12
        security create-keychain -p "temporary-password" build.keychain 
        security default-keychain -s build.keychain
        security unlock-keychain -p "temporary-password" build.keychain
        security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "temporary-password" build.keychain
    
    - name: Build and sign application
      env:
        MACOS_CODESIGN_IDENTITY: ${{ secrets.MACOS_CODESIGN_IDENTITY }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        MACOS_API_ISSUER_ID: ${{ secrets.MACOS_API_ISSUER_ID }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
      run: |
        chmod +x ./build.sh
        ./build.sh --type ci --sign "$MACOS_CODESIGN_IDENTITY" --notarize --zip
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
        files: |
          CentralTime-${{ steps.get_version.outputs.VERSION }}.zip
          VERSION
        body: |
          # CentralTime ${{ steps.get_version.outputs.VERSION }}
          
          A Swift menubar app that cycles through and displays time in multiple cities.
          
          ## What's New
          
          Please see [CHANGELOG.md](CHANGELOG.md) for detailed release notes.
          
          ## Installation
          
          1. Download the `CentralTime-${{ steps.get_version.outputs.VERSION }}.zip` file below
          2. Unzip the file
          3. Move `CentralTime.app` to your Applications folder
          4. Open the application (you may need to right-click and select "Open" the first time)
          
          ## Features
          
          - üåç Display time for multiple cities in your menu bar
          - üîÑ Automatic rotation through selected cities every 3 seconds
          - üïê Time slider to check times in the past or future
          - üåÜ 150+ cities available for selection
          - üé® Clean, modern SwiftUI interface
          - ‚ö° Optimized performance and memory usage
          
          ## System Requirements
          
          - macOS 13.0 (Ventura) or later
          - Apple Silicon or Intel Mac
          
          ## Verification
          
          This app is signed with a Developer ID certificate and notarized by Apple for your security.